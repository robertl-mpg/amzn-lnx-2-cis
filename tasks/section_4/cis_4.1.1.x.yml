---
- name: "AUTOMATED | 4.1.1.1 | PATCH | Ensure auditd is installed"
  package:
    name: ['audit', 'audit-libs']
    state: present
  vars:
    ansible_python_interpreter: /bin/python
  when:
  - amznlnx2cis_rule_4_1_1_1
  notify: restart auditd
  tags:
  - level2
  - auditd
  - automated
  - rule_4.1.1.1

- name: "AUTOMATED | 4.1.1.2 | PATCH | Ensure auditd service is enabled and running"
  service:
    name: auditd
    state: started
    enabled: yes
  when:
  - not amznlnx2cis_skip_for_travis
  - amznlnx2cis_rule_4_1_1_2
  - ansible_connection != 'docker'
  tags:
  - level2
  - auditd
  - patch
  - automated
  - rule_4.1.1.2

- name: "AUTOMATED | 4.1.1.3 | PATCH | Ensure auditing for processes that start prior to auditd is enabled - GRUB_CMDLINE_LINUX"
  replace:
    dest: /etc/default/grub
    # regexp: '(^GRUB_CMDLINE_LINUX\s*\=\s*)(?:")(.+)(?<!audit=1)(?:")'
    regexp: ^(GRUB_CMDLINE_LINUX=)(?:")(?!.*audit=1)(.+)(?:")$
    replace: '\1"\2 audit=1"'
  notify: grub2cfg
  when:
  - amznlnx2cis_rule_4_1_1_3
  tags:
  - level2
  - auditd
  - patch
  - automated
  - rule_4.1.1.3

# - name: "AUTOMATED | 4.1.1.3 | PATCH | Ensure auditing for processes that start prior to auditd is enabled - GRUB_CMDLINE_LINUX_DEFAULT"
#   replace:
#     dest: /etc/default/grub
#     # regexp: '(^GRUB_CMDLINE_LINUX\s*\=\s*)(?:")(.+)(?<!audit=1)(?:")'
#     regexp: ^(GRUB_CMDLINE_LINUX_DEFAULT=)(?:")(?!.*audit=1)(.+)(?:")$
#     replace: '\1"\2 audit=1"'
#   notify: grub2cfg
#   loop:
#     -
#   when:
#   - amznlnx2cis_rule_4_1_1_3
#   tags:
#   - level2
#   - auditd
#   - patch
#   - automated
#   - rule_4.1.1.3
